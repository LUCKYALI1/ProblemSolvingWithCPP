int numberofdays(vector<int> &weights, int cap) {
        int days = 1, load = 0;
        for (int i = 0; i < weights.size(); i++) {
            if (weights[i] + load > cap) {
                days += 1;
                load = weights[i]; // Reset load to current weight
            } else {
                load += weights[i];
            }
        }
        return days;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int low = *max_element(weights.begin(), weights.end());
        int high = accumulate(weights.begin(), weights.end(), 0);
        int minicap = high;

        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (numberofdays(weights, mid) <= days) {
                minicap = mid;
                high = mid - 1; // Correct adjustment of high boundary
            } else {
                low = mid + 1;
            }
        }
        return minicap;
    }
